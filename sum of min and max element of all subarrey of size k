#include<iostream>
#include<vector>
#include<deque>
using namespace std;
      int return_min_max_sum(vector<int>& nums, int k) {
        int ans = 0;
        deque<int>q;
        deque<int>q1;

        for(int i =0;i<k;i++)
        {
            int element = nums[i];
            while(!q.empty() && element >= nums[q.back()]){
                q.pop_back();
            }
             while(!q1.empty() && element <= nums[q1.back()]){
                q1.pop_back();
            }

            q.push_back(i);
            q1.push_back(i);

        }
        ans += nums[q.front()] + nums[q1.front()];

            for(int i =k;i<nums.size();i++){
            

                // element deletion 
                if(!q.empty() && i - q.front() >= k){
                    q.pop_front();

                }
                 if(!q1.empty() && i - q1.front() <= k){
                    q1.pop_front();

                }
                int element = nums[i];
                while(!q.empty() && element >= nums[q.back()]){
                    q.pop_back();

                }
                  while(!q1.empty() && element <= nums[q1.back()]){
                    q1.pop_back();

                }
                q.push_back(i);
                q1.push_back(i);

                 ans+= nums[q.front()] + nums[q1.front()];
            }
            

             return ans;
        }

        int main(){
          vector<int>arr{2,5,-1,7,-3,-1,-2};
          int sum  = return_min_max_sum(arr,4);
          cout<<sum<<endl;
        }
       
    
     
