class Solution {
public:
    int firstUniqChar(std::string s) {
        std::queue<int> charQueue;
        std::unordered_map<char, int> frequency;

        for (int i = 0; i < s.length(); ++i) {
            char currentChar = s[i];

            frequency[currentChar]++;
            charQueue.push(i);

            while (!charQueue.empty() && frequency[s[charQueue.front()]] > 1) {
                charQueue.pop();
            }
        }

        return charQueue.empty() ? -1 : charQueue.front();
    }
};
