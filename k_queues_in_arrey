#include <iostream>
using namespace std;
class K_Queues{
  public:
  int * arr , * front , *rear , *next;
  int freespot , n , k;
  K_Queues(int _n , int _k) : n(_n),k(_k),freespot(0){
    arr = new int[n];
    front = new int[k];
    rear = new int[k];
    next = new int[n];

    for(int i=0;i<n;i++){
      next[i] = i+1;
    }
    next[n-1] = -1;

    for(int i=0;i<k;i++){
      front[i] = rear[i] = -1;
    }
  }

  int push(int X , int qi){
   if(freespot == -1){
    return -1;
   }

   int index = freespot;
   freespot = next[index];

   if(front[qi] == -1){
    front[qi] = index;
   }
   else{
    next[rear[qi]] = index;
   }

   next[index] = -1;

   rear[qi] = index;
   arr[index] = X;
   int element = arr[index];
   
   return element; 

  }

  int pop(int qi){
    if(front[qi]==-1){
      return -1;
    }

    int index = front[qi];
    
    front[qi] = next[index];
    next[index] = freespot;
    freespot = index;

    int element = arr[index];
    arr[index] = 0;
    return element;
  }

  void print(){
    for(int i=0;i<n;i++){
      cout<<arr[i]<<" ";
    }cout<<endl;
  }
  void print_next(){
    for(int i=0;i<n;i++){
      cout<<next[i]<<" ";
    }cout<<endl;
  }
};
int main() {
  K_Queues kq(8,3);
  cout<<kq.push(1,0)<<endl;
  cout<<kq.push(100,1)<<endl;
  cout<<kq.push(100,1)<<endl;
  kq.print();
  // cout<<kq.pop(0)<<endl;

  kq.print();
  cout<<"next elements :" << endl;
  kq.print_next();
 
  return 0;
}
